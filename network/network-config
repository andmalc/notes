
Network Manager {{{1

also: 
	nmtui in NetworkManager-tui - console editor
	nm-connection-editor - full featured GUI

nmcli
	<no arg>
		overview of all interfaces including bridges 
		bridged containers also shown

	g/gen
		shows active ethernet & wifi devices

	dev
		status (default)
			devices & connection profiles

		wifi 
			List available wifi connections
			
			connect
				nmcli device wifi connect <SSID|BSSID> password "pw"

	c/conn
        show (default)
			show all connections
		show <conn name>
			show conn details

		add - defaults to dhcp
			ethernet 
				add con-name Example-Connection ifname enp7s0 type ethernet
			wifi 
				add type wifi con-name "conn-name" ifname wlp1s0 ssid "ssid"

		mod/modify
				conn mod <conn name> <property> <value>
			change dhcp config to static
				connection modify Example-Connection ipv4.addresses 192.0.2.1/24
			wifi info
				conn modify conn-name wifi-sec.key-mgmt wpa-psk
				conn modify conn-name wifi-sec.psk password 
			dns
				con mod 'System eth0' ipv4.dns "8.8.8.8 8.8.4.4"
			connect interface to bridge
				add type ethernet slave-type bridge con-name <name e.g. bridge0-port1> ifname <ifname> master <br name>

		delete
			con delete <id>

		up



Connections
	Saved in: /etc/NetworkManager/system-connections/<name>.nmconnection 

iwd (Net Wireless Daemon) {{{1

manage with iwctl
https://wiki.archlinux.org/title/Iwd#iwctl



ip - iproute2 {{{1

can supercede net-tools apps ifconfig, route, arp, though essential when > 1 route

http://teknixx.com/new-linux-networking-commands/

ip address - protocol address management
	add
		ip addr add 192.168.1.1/24 dev eth0
	del
        ip a del dev <device>
	show
        ip a s dev eth0
    
    list,ls,l

ip link
	add
		ip link add br0 type bridge

	set, s
        dev [interface] 
            up/down
            name <new name>
			master <br>
				add to bridge

	show
		master <bridge name>
			show interfaces on bridge
		type bridge
			show all bridges

ip neighbour
    show level 2 info - like arp
	alias: neigh, n
	add, change, replace, delete, flush, show


ip route - routing table management
	add
		ip route add 10.0.0/24 via 193.233.7.65
	add NAT 
		NAT the address 192.203.80.144 to 193.233.7.83 before forwarding
		ip route add nat 192.203.80.142 via 193.233.7.83
	chg
		ip route add 10.0.0/24 via 193.233.7.65 dev eth1
	del
    show (alias list, ls)
        ip r s 
		all - list all tables
		ip route ls all 
	flush, f

	ip route - shows route
	ip route del <paste entire route line from above>
	ip route add default via <gateway IP> - set default gw

ss - display sockets {{{1 

part of iproute package
replaces netstat
Fedora: iproute route package

-l      display all listening sockets
-t      display listening TCP sockets
-p      show process using sockets

    check for listening socket
        ss -tnlp | grep ssh

nmap  {{{1

best choice for port scanning
cheat sheet saved at Drive/Share/pdf

detect hosts on network
	192.168.0.* | grep Host
-sn     ping scan
-sP      


netcat {{{1

    https://www.digitalocean.com/community/tutorials/how-to-use-netcat-to-establish-and-test-tcp-and-udp-connections-on-a-vps
    netcat <options> host startport-endport
    package nmap-ncat
    scan faster if use IP address instead of domain
    options
        -z  scan instead of opening connection
        -v  verbose
        -n  numeric host IP provided, DNS not needed

	server: nc -l -p <port>
	client: nc <host> <port>
	scan: nc -vz <host> <port or port range>


Other {{{1

tcpdump 
	raw info
	Docs
		http://www.informit.com/articles/article.asp?p=352988&seqNum=3
		https://danielmiessler.com/study/tcpdump/
		https://tcpdump101.com/
	
	e.g.
		Test ping through firewall using tcpdump
		https://lists.linux-foundation.org/pipermail/bridge/2005-October/004724.html
		tcpdump -i eth2 icmp


ethereal (graphical) / tethereal (cmd line)
	friendlier interface

mtr

tshark/wireshark
	higher level interface
	-D	list interfaces
	-i	interface name or # from -D



Old {{{1

netstat - deprecated, use ip -s, ss, ip route
		Reports on listening daemons
		debian package net-tools
	show all running sessions and daemons
		netstat -untap  
	shows running daemons
		netstat --tcp --udp --listening --program --numeric (ntpl)
        netstat -pan -A inet,inet6 | grep -v ESTABLISHED    
        netstat -tlnwp  server sockets with prog names	
	options
		ant		show programs bound to ports for TCP address family
		i		interfaces
		r		kernel routing tables
		M		masqueraded connections
        n       show port numbers instead of program names
		p		show name of program
		c		continuous display
		t		tcp
		l		listening servers only
		a		show all

