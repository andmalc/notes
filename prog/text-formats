json {{{1

jo {{{2
jo	format input as json
	https://github.com/jpmens/jo
    

jq {{{2
    transform structured data 
	https://stedolan.github.io/jq/manual/

	Generic Object Index
		.["foo"]		long form, use if key contains special chars
	Object Identifier-Index
		.foo			shorthand version

	array value iterator	.[] 
		if applied to list, returns list items
		if applied to objects, returns obj values
		- causes each of the keys to be emitted separately (looped through,
		  effectively) and passed to subsequent filters.
		

		.[]			items in array	
		.[0:4]		slice of items
		.[-1]		last item
		.[].foo		all foo values of ojbects within array
		.foo[]		all array items within foo

	Plus operator +
		Join multiple filter outputs into single string

	nested objs
		.obj1[1],obj2	obj2 within second item of obj1
		 '. | .obj'		ojb anywhere

	object values as an 
	Examples:
		Value of 'url' from first item
		curl https://api.github.com/repos/andmalc/notes/commits |  jq '.[0].url'

		Value of url within top level owner obj
		curl https://api.github.com/repos/andmalc/notes |  jq '.owner | .url'

Python glom for nested data like json
https://github.com/mahmoud/glom

jc {{{2

Interpret command command outputs to json

Elvish from-json built-in {{{2

Nushell 'from json' builtin {{{2

Oil  json read builtin {{{2

yaml {{{1

Docs:
https://www.digitalocean.com/community/tutorials/an-introduction-to-cloud-config-scripting

Lint with yamllint

Key/value format:
    key: value #need space after :



http://yaml-online-parser.appspot.com/
https://docs.saltstack.com/en/latest/topics/yaml/


