Regular Expressions
=====================

Will match anywhere on a line
Read forward until match found, reading stops unless Global flag set

Literal Characters
	alpha numeric characters 
	!, %, =, and _ are normally also literal
	
Metacharacters
	.	Matches any single character
	^/$	Match empty string at beginning/end of line
	\b \B	At edge/not at edge of word

	^/$	beginning/end of line (anchors)
	^	negation
	[ and ]	character sets

	()	grouping characters
		(abc)+ one or more 'abc' in order

|	alternative execution

PCRE additional Meta Characters

	repeat modifiers - greedy by default
	?	Optional, matched at most once (\= in vi)
	*	Iteration: matched 0 or more times
	+	Matched one or more times
	{}	range for # times to match

	
Precedence 
	|	lowest
	
Bracket expressions
    [abc]  match if any character, any order 
    [^abc]  don't match if any 

Character Classes
	Named classes of characters: (in [:...:])
	alnum, alpha, cntrl, digit;graph, lower, print, punct,
	space, upper, xdigit.

	\w = [[:alnum:]]
	\W = [^[:alnum:]]

	In character class, ^ is NOT
    [:upper:]

Find alternatives:
grep 'str1\|str2' filename

Repitition
    *   zero or more times
    extended 
        +       one or more 
        {n}     num of repititions
        {n,n}   range

	{n}	Matched n times
	{n,}	n or more times
	{,n}	at most n times
	{n,m}	at least n, but not more than m times
	\< \>	Match empty string at beginning/end of word
	\( \) \1 Remember match, mark with digit, match when found again.

| Infix operator - match regex on either side

Flags
	g	global - repeat matches instead of just first one found


Grouping
    ()  Enclose group.  Escape if not extended



Egrep
	Extended searching.  
	Quote expression and surround each regex with () and use:
	+	1=> occurances
	?	0<>1 occurances
	|	OR operator

	-f	Search for list of patterns in a file
	




